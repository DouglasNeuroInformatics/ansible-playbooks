- name: Installing SLURM Dependencies
  apt:
    state: present
    pkg:
      - chrpath
      - hdf5-helpers
      - hwloc
      - libcurl4-openssl-dev
      - libdbus-1-dev
      - libfreeipmi-dev
      - libgtk2.0-dev
      - libhdf5-dev
      - libhdf5-openmpi-dev
      - libhttp-parser-dev
      - libhwloc-dev
      - libipmimonitoring-dev
      - libjson-c-dev
      - libjwt-dev
      - liblua5.1-0-dev
      - liblz4-dev
      - libmunge2
      - libmunge-dev
      - libncurses6
      - libncurses-dev
      - libpam0g-dev
      - libperl-dev
      - libpam-dev
      - libreadline-dev
      - librrd-dev
      - libyaml-dev
      - man2html-base
      - munge
      - numactl
      - rng-tools
      - zlib1g-dev
    update_cache: yes


- name: Check if current version is installed
  become: yes
  stat:
    path: "{{ slurm_prefix_path}}/sbin/slurmd"
  register: slurmd_installed

- name: Get SLURM sources
  ansible.builtin.unarchive:
    src: "{{ slurm_tarball_url }}"
    dest: "/tmp"
    remote_src: yes
  when: not slurmd_installed.stat.exists
  register: slurm_source_unpack

- name: Configuring SLURM source
  command: "./configure --prefix={{ slurm_prefix_path }} --sysconfdir={{ slurm_conf_dir }} --enable-pam --with-nvml=/opt/quarantine/software/cuda/9.1/install"
  args:
    chdir: "{{ slurm_src_dir }}"
  when: slurm_source_unpack is changed
  register: slurm_configure

- name: Installing SLURM
  become: yes
  shell: make -j {{ ansible_processor_vcpus }} && make install && make -j {{ ansible_processor_vcpus }} contrib && make install-contrib
  args:
    chdir: "{{ slurm_src_dir }}"
  when: slurm_configure is changed

#    - "{{ slurm_src_dir }}/etc/*service"
#        - "{{ slurm_src_dir }}/etc/slurmctld.service"
#        - "{{ slurm_src_dir }}/etc/slurmdbd.service"
#        - "{{ slurm_src_dir }}/etc/slurmd.service"
#        - "{{ slurm_src_dir }}/etc/slurmrestd.service"

- name: Copy SLURM service files
  become: yes
  copy:
    src: "{{ slurm_src_dir }}/etc/slurmd.service"
    dest: /etc/systemd/system
    remote_src: true
  when: slurm_configure is changed

- name: Fix paths in servicefiles
  ansible.builtin.replace:
    path: "{{ slurm_src_dir }}/etc/slurmd.service"
    regexp: "{{ slurm_version }}"
    replace: 'current'
  ignore_errors: true
  when: slurm_configure is changed

- name: Link the install to the current
  ansible.builtin.file:
    src: /opt/slurm/{{ slurm_version }}
    dest: /opt/slurm/current
    state: link
    force: yes

- name: Create SLURM logs directory
  ansible.builtin.file:
    path: /opt/slurm/logs
    state: directory

- name: Install munge key
  copy: src=files/munge.key dest=/etc/munge/munge.key

- name: restart munge
  systemd: state=restarted enabled=true name=munge daemon_reload=yes

- name: copy slurm default configuration based on node type
  block:
    - name: Install slurm default config on workstations
      copy:
        src: files/default.slurmd.workstation
        dest: /etc/default/slurmd
      when: "'workstations' in group_names"

    - name: Install slurm default config on compute nodes
      copy:
        src: files/default.slurmd.computenode
        dest: /etc/default/slurmd
      when: "'computenodes' in group_names"

- name: install slurm path
  copy: src=files/99slurm_path.sh dest=/etc/profile.d/

- name: update slurmd ExecStart to use the highest nice value
  lineinfile:
    path: /etc/systemd/system/slurmd.service
    regexp: '^ExecStart='
    line: "ExecStart=/opt/slurm/current/sbin/slurmd --systemd $SLURMD_OPTIONS -n 19"
  tags:
    - execstart

- name: enable slurmd
  systemd: state=restarted enabled=true name=slurmd daemon_reload=yes
  tags:
    - execstart
